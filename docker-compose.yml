# Docker Compose file pour le projet Toolbox Cyber
services:
  toolbox:
    build: .
    command: python -m toolbox.app
    ports:
      - "5001:5000"  # accessible via localhost:5001
    networks:
      - frontend
      - backend
    environment:
      FLASK_DEBUG: "1"
      PYTHONPATH: /src
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      ZAP_API_KEY: ""
    volumes:
      - ./src:/src
    working_dir: /src
    depends_on:
      - db
      - redis
      - minio
      - celery

  celery:
    build: .
    command: celery -A toolbox.celery_worker.celery worker --loglevel=info
    environment:
      PYTHONPATH: /src
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./src:/src
      - ./scan_reports:/scan_reports
    depends_on:
      - redis
      - db
      - minio
    networks:
      - backend

  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    networks:
      - backend

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: toolbox_db
    expose:
      - "5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    expose:
      - "9000"
      - "9001"
    networks:
      - backend
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  zap:
    image: zaproxy/zap-stable
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true -config api.disablekey=true
    ports:
      - "8080:8080"
    environment:
      ZAP_API_KEY: ""

volumes:
  postgres_data:
  minio_data:

networks:
  frontend:
  backend:
